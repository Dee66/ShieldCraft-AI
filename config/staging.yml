app:
  env: staging
  region: af-south-1
  resource_prefix: shieldcraft-staging
  log_level: INFO
  enable_feature_x: false
  # Cost and governance controls

networking:
  vpc_id: vpc-shieldcraft-staging
  cidr: "10.1.0.0/16"
  subnets:
    - id: subnet-priv-a
      cidr: "10.1.1.0/24"
      type: private
    - id: subnet-priv-b
      cidr: "10.1.2.0/24"
      type: private
  security_groups:
    - id: sg-msk
      description: Security group for MSK brokers
      allow_all_outbound: true
    - id: sg-lambda
      description: Security group for Lambda functions
      allow_all_outbound: true
    - id: sg-default
      description: Default security group for ShieldCraft staging VPC
      allow_all_outbound: true

msk:
  security_group:
    id: MskSecurityGroup
    description: Security group for MSK brokers
    allow_all_outbound: true
  cluster:
    id: ShieldCraftMskCluster
    name: shieldcraft-msk-cluster-staging
    kafka_version: 3.5.1
    number_of_broker_nodes: 3
    instance_type: kafka.m5.large
    enhanced_monitoring: PER_TOPIC_PER_BROKER
    client_authentication:
      sasl_scram: false
      tls: true
    encryption_in_transit:
      client_broker: TLS
      in_cluster: true
    public_access: false
    vpc_subnet_ids:
      - subnet-priv-a
      - subnet-priv-b
    security_group_ids:
      - sg-msk

lambda_:
  functions:
    - id: MskTopicCreator
      description: Lambda to create Kafka topics after MSK cluster is ready
      handler: msk_topic_creator.lambda_handler
      runtime: python{{ PYTHON_VERSION }}
      memory_size: 256
      timeout: 60
      environment:
        MSK_CLUSTER_NAME: shieldcraft-msk-cluster-staging
        TOPICS:
          - name: events-ingest
            partitions: 3
            replication_factor: 2
          - name: audit-log
            partitions: 2
            replication_factor: 2
      vpc_subnet_ids:
        - subnet-priv-a
        - subnet-priv-b
      security_group_ids:
        - sg-lambda
      policies:
        - kafka:DescribeCluster
        - kafka:GetBootstrapBrokers
        - kafka:CreateTopic
        - kafka:ListTopics
        - kafka:DescribeTopic

opensearch:
  security_group:
    id: OpenSearchSecurityGroup
    description: Security group for OpenSearch
    allow_all_outbound: true
  domain:
    id: ShieldCraftOpenSearchDomain
    name: shieldcraft-opensearch-staging
    engine_version: OpenSearch_2.11
    cluster_config:
      instanceType: t3.small.search
      instanceCount: 2
    node_to_node_encryption_options:
      enabled: true
    encryption_at_rest_options:
      enabled: true
    ebs_options:
      ebsEnabled: true
      volumeSize: 20
      volumeType: gp3

airbyte:
  deployment_type: ecs
  min_task_count: 1
  max_task_count: 3

data_quality:
  dq_framework: deequ
  dq_schedule: cron(0 3 * * ? *)

lakeformation:
  admin_role: ShieldCraftLakeAdmin
  data_lake_location: s3://shieldcraft-staging-analytics
  permissions:
    - template: etl
      principal: GLUE_EXECUTION_ROLE_ARN
      resource_type: table
      resource:
        databaseName: shieldcraft_staging_db
        tableName: raw_data
    - template: admin
      principal: LAKEFORMATION_ADMIN_ROLE_ARN
      resource_type: database
      resource:
        databaseName: shieldcraft_staging_db
    - principal: SAGEMAKER_EXECUTION_ROLE_ARN
      resource_type: bucket
      resource:
        arn: arn:aws:s3:::shieldcraft-staging-analytics
      actions: ["DATA_LOCATION_ACCESS"]

sagemaker:
  training_instance_type: ml.m5.xlarge
  inference_instance_type: ml.m5.large
  endpoint_auto_scaling: true
  model_registry: shieldcraft-model-registry-staging

cloud_native_hardening:
  enable_cloudwatch_alarms: true
  alarm_email: devops@shieldcraft.ai
  config_rules:
    - s3-bucket-public-read-prohibited
    - iam-user-no-policies-check
tags:
  project: shieldcraft-ai
  environment: staging
  owner: ai-solutions
  cost_center: RND
  team: mlops
  compliance: standard
