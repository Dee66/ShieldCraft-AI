orchestrator:
  output_dir: orch_results/dev
  max_workers: 2
  retry: 1
  log_level: INFO
chunking:
  strategy: fixed
  fixed:
    chunk_size: 256
    overlap: 16
    min_length: 64
  semantic:
    min_length: 64
  recursive:
    max_chunk_size: 256
    min_length: 64
  sentence:
    min_length: 32
  token_based:
    chunk_size: 128
    overlap: 8
    min_length: 32
    tokenizer: dummy
  sliding_window:
    window_size: 128
    step_size: 64
    min_length: 32
  custom_heuristic:
    delimiter: "\n---\n"
    min_length: 32
    rules: {}
app:
  env: dev
  region: af-south-1
  account: "879584803102"
  resource_prefix: shieldcraft-dev
  log_level: DEBUG
  enable_feature_x: true

networking:
  vpc_id: vpc-shieldcraft-dev
  cidr: "10.0.0.0/16"
  subnets:
    - id: subnet-pub-a
      cidr: "10.0.10.0/24"
      type: PUBLIC
    - id: subnet-priv-a
      cidr: "10.0.1.0/24"
      type: PRIVATE
    - id: subnet-priv-b
      cidr: "10.0.2.0/24"
      type: PRIVATE
  security_groups:
    - id: sg-msk
      description: Security group for MSK brokers
      allow_all_outbound: true
    - id: sg-lambda
      description: Security group for Lambda functions
      allow_all_outbound: true
    - id: sg-default
      description: Default security group for ShieldCraft dev VPC
      allow_all_outbound: true

s3:
  buckets:
    - id: RawDataBucket
      name: shieldcraft-dev-raw
      versioned: true
      encryption: S3_MANAGED
      block_public_access: BLOCK_ALL
      removal_policy: DESTROY
      enable_glue_crawler: true
      crawler:
        schedule: "cron(0 2 * * ? *)"
        table_prefix: "raw_"
      lifecycle_rules:
        - id: transition-raw-dev
          enabled: true
          transitions:
            - days: 30
              storage_class: STANDARD_IA
            - days: 60
              storage_class: GLACIER
          expiration_days: 365
          abort_incomplete_multipart_upload_days: 7
    - id: ProcessedDataBucket
      name: shieldcraft-dev-processed
      versioned: true
      encryption: S3_MANAGED
      block_public_access: BLOCK_ALL
      removal_policy: DESTROY
      enable_glue_crawler: true
      crawler:
        schedule: "cron(0 3 * * ? *)"
        table_prefix: "processed_"
      lifecycle_rules:
        - id: transition-processed-dev
          enabled: true
          transitions:
            - days: 30
              storage_class: STANDARD_IA
            - days: 60
              storage_class: GLACIER
          expiration_days: 365
          abort_incomplete_multipart_upload_days: 7
    - id: AnalyticsDataBucket
      name: shieldcraft-dev-analytics
      versioned: true
      encryption: S3_MANAGED
      block_public_access: BLOCK_ALL
      removal_policy: DESTROY
      enable_glue_crawler: true
      crawler:
        schedule: "cron(0 4 * * ? *)"
        table_prefix: "analytics_"
      lifecycle_rules:
        - id: transition-analytics-dev
          enabled: true
          transitions:
            - days: 30
              storage_class: STANDARD_IA
            - days: 60
              storage_class: GLACIER
          expiration_days: 365
          abort_incomplete_multipart_upload_days: 7
  lifecycle_policy_days: 30
  enable_access_logs: true

glue:
  database_name: shieldcraft_dev_db
  crawler_schedule: cron(0 2 * * ? *)
  enable_data_quality: false

msk:
  mode: external # external (dev) | managed (staging/prod)
  security_group:
    id: MskSecurityGroup
    description: Security group for MSK brokers
    allow_all_outbound: true
  external:
    bootstrap_brokers: "redpanda:9092"
    scram_secret_arn: ""
  cluster:
    id: ShieldCraftMskCluster
    name: shieldcraft-msk-cluster
    kafka_version: 3.5.1
    number_of_broker_nodes: 3
    instance_type: kafka.m5.large
    enhanced_monitoring: PER_TOPIC_PER_BROKER
    client_authentication:
      sasl_scram: false
      tls: true
    encryption_in_transit:
      client_broker: TLS
      in_cluster: true
    public_access: false
    vpc_subnet_ids:
      - subnet-priv-a
      - subnet-priv-b
    security_group_ids:
      - sg-msk

lambda_:
  functions:
    - id: MskTopicCreator
      description: Lambda to create Kafka topics after MSK cluster is ready
      handler: msk_topic_creator.lambda_handler
      runtime: python{{ PYTHON_VERSION }}
      memory_size: 256
      timeout: 60
      environment:
        MSK_CLUSTER_NAME: shieldcraft-msk-cluster
        TOPICS:
          - name: events-ingest
            partitions: 3
            replication_factor: 2
          - name: audit-log
            partitions: 2
            replication_factor: 2
      vpc_subnet_ids:
        - subnet-priv-a
        - subnet-priv-b
      security_group_ids:
        - sg-lambda
      policies:
        - kafka:DescribeCluster
        - kafka:GetBootstrapBrokers
        - kafka:CreateTopic
        - kafka:ListTopics
        - kafka:DescribeTopic

opensearch:
  mode: none # none (dev) | managed | self_managed
  provision: false
  security_group:
    id: OpenSearchSecurityGroup
    description: Security group for OpenSearch
    allow_all_outbound: true
  domain:
    id: ShieldCraftOpenSearchDomain
    name: shieldcraft-opensearch-dev
    engine_version: OpenSearch_2.11
    cluster_config:
      instanceType: m6g.large.search
      instanceCount: 2
    node_to_node_encryption_options:
      enabled: true
    encryption_at_rest_options:
      enabled: true
    ebs_options:
      ebsEnabled: true
      volumeSize: 20
      volumeType: gp3

airbyte:
  mode: ecs_scale_to_zero # local | ecs_scale_to_zero (dev) | ecs_managed
  deployment_type: ecs
  min_task_count: 1
  max_task_count: 3

data_quality:
  mode: inline # inline (dev) | managed
  dq_framework: deequ
  dq_schedule: cron(0 3 * * ? *)

lakeformation:
  admin_role: ShieldCraftLakeAdmin
  data_lake_location: s3://shieldcraft-dev-analytics
  buckets:
    - id: AnalyticsDataBucket
      name: shieldcraft-dev-analytics
    - id: RawDataBucket
      name: shieldcraft-dev-raw
    - id: ProcessedDataBucket
      name: shieldcraft-dev-processed
  permissions:
    - template: etl
      principal: GLUE_EXECUTION_ROLE_ARN
      resource_type: table
      resource:
        databaseName: shieldcraft_dev_db
        tableName: raw_data
    - template: admin
      principal: LAKEFORMATION_ADMIN_ROLE_ARN
      resource_type: database
      resource:
        databaseName: shieldcraft_dev_db
    - principal: SAGEMAKER_EXECUTION_ROLE_ARN
      resource_type: bucket
      resource:
        arn: arn:aws:s3:::shieldcraft-dev-analytics
      actions: ["DATA_LOCATION_ACCESS"]

sagemaker:
  mode: local # local (dev) | managed
  training_instance_type: ml.t3.medium
  inference_instance_type: ml.t3.medium
  endpoint_auto_scaling: false
  model_registry: shieldcraft-model-registry-dev

cloud_native_hardening:
  enable_cloudwatch_alarms: true
  alarm_email: devops@shieldcraft.ai
  config_rules:
    - s3-bucket-public-read-prohibited
    - iam-user-no-policies-check
tags:
  project: shieldcraft-ai
  environment: dev
  owner: ai-solutions
  cost_center: RND
  team: mlops
  compliance: standard
eventbridge:
  data_bus_name: shieldcraft-dev-data-bus
  security_bus_name: shieldcraft-dev-security-bus
  lambda_export_name: DevMskTopicCreatorLambdaArn
  data_event_source: shieldcraft.data.dev

stepfunctions:
  workflow_type: express # express (dev) | standard
  state_machines:
    - id: DataIngestAndValidate
      name: shieldcraft-dev-data-ingest-validate
      role_arn: arn:aws:iam::123456789012:role/ShieldCraftStepFnRole
      comment: "Orchestrates data ingestion, validation, and error handling"
      definition:
        - id: IngestData
          type: Task
          resource: arn:aws:lambda:af-south-1:123456789012:function:IngestDataLambda
          next: ValidateData
          catch:
            - handler: HandleIngestError
              errors: ["States.ALL"]
        - id: ValidateData
          type: Task
          resource: arn:aws:lambda:af-south-1:123456789012:function:ValidateDataLambda
          next: IsValid
        - id: IsValid
          type: Choice
          choices:
            - condition: string_equals
              args: ["$.validationResult", "PASS"]
              next: Success
            - condition: string_equals
              args: ["$.validationResult", "FAIL"]
              next: HandleValidationError
          default: HandleValidationError
        - id: Success
          type: Pass
          end: true
        - id: HandleIngestError
          type: Pass
          end: true
        - id: HandleValidationError
          type: Pass
          end: true
    - id: BenchmarkAndValidate
      name: shieldcraft-dev-benchmark-validate
      role_arn: arn:aws:iam::123456789012:role/ShieldCraftStepFnRole
      comment: "Orchestrates BEIR/MTEB benchmarking and model validation (dev: costless)"
      definition:
        - id: RunBEIRBenchmark
          type: Pass
          next: RunMTEBBenchmark
        - id: RunMTEBBenchmark
          type: Pass
          next: ValidateBenchmarkResults
        - id: ValidateBenchmarkResults
          type: Pass
          next: Success
        - id: Success
          type: Pass
          end: true
        - id: HandleBenchmarkError
          type: Pass
          end: true
ai_core:
  # Use free stub backend locally; switch to small local model if needed
  model_name: "stub" # alternatives: "gpt2", "mistralai/Mistral-7B-v0.1"
  quantize: false
  device: "cpu"
embedding:
  model_name: "sentence-transformers/all-MiniLM-L6-v2"
  quantize: false
  device: "cpu"
vector_store:
  db_host: "localhost"
  db_port: 5432
  db_name: "shieldcraft_vectors"
  db_user: "postgres"
  db_password: "aws-vault:dev/vector_store/db_password"
  table_name: "embeddings"
  batch_size: 100
beir:
  datasets: ["scifact"]
  data_path: "./beir_datasets"
  output_path: "beir_results.json"
  batch_size: 32
mteb:
  tasks: null
  output_path: "mteb_results.json"
  batch_size: 32
